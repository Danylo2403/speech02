{"mappings":"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","sources":["src/weather.js","src/news.js","src/currency.js","src/db.json","src/reminders.js","src/jokes.js","src/smart-home.js","src/ai.js","src/utils.js","src/index.js"],"sourcesContent":["export async function fetchWeather(city = 'Киев') {\n  const apiKey = 'ВАШ_КЛЮЧ_API_ПОГОДЫ';  // Получите ключ API от сервиса погоды\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&lang=ru&appid=${apiKey}`;\n  \n  try {\n    const response = await fetch(url);\n    if (!response.ok) throw new Error('Ошибка при получении данных о погоде');\n    const data = await response.json();\n    const { name, weather, main } = data;\n    return {\n      name,\n      description: weather[0].description,\n      temp: main.temp\n    };\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\n// export async function fetchWeather(city = 'Киев') {\n//   const apiKey = process.env.WEATHER_API_KEY; // API-ключ из .env\n//   const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&lang=ru&appid=${apiKey}`;\n  \n//   try {\n//     const response = await fetch(url);\n//     if (!response.ok) throw new Error('Ошибка при получении данных о погоде');\n//     const data = await response.json();\n//     const { name, weather, main } = data;\n//     return {\n//       name,\n//       description: weather[0].description,\n//       temp: main.temp\n//     };\n//   } catch (error) {\n//     console.error(error);\n//     return null;\n//   }\n// }\n","export async function fetchNews(keyword = 'новости') {\n  const apiKey = 'ВАШ_КЛЮЧ_API_НОВОСТЕЙ'; // Получите ключ API для новостного сервиса\n  const url = `https://newsapi.org/v2/everything?q=${keyword}&apiKey=${apiKey}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) throw new Error('Ошибка при получении новостей');\n    const data = await response.json();\n    return data.articles;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n}\n\n// export async function fetchNews(keyword = 'новости') {\n//   const apiKey = process.env.NEWS_API_KEY; // Используем ключ из .env\n//   const url = `https://newsapi.org/v2/everything?q=${keyword}&apiKey=${apiKey}`;\n\n//   try {\n//     const response = await fetch(url);\n//     if (!response.ok) throw new Error('Ошибка при запросе новостей');\n//     const data = await response.json();\n\n//     // Проверяем, есть ли статьи\n//     if (!data.articles || data.articles.length === 0) {\n//       console.warn('Новости не найдены');\n//       return [];\n//     }\n\n//     // Возвращаем только необходимые данные для каждой статьи\n//     return data.articles.map(article => ({\n//       title: article.title,\n//       description: article.description,\n//       url: article.url,\n//       source: article.source.name\n//     }));\n//   } catch (error) {\n//     console.error('Ошибка:', error);\n//     return [];\n//   }\n// }\n","export async function fetchCurrencyRate(from = 'USD', to = 'RUB') {\n  const apiKey = 'ВАШ_КЛЮЧ_API_КУРСОВ'; // Получите ключ API для валютных курсов\n  const url = `https://api.exchangerate-api.com/v4/latest/${from}`;\n\n  try {\n    const response = await fetch(url);\n    if (!response.ok) throw new Error('Ошибка при получении курса валют');\n    const data = await response.json();\n    return data.rates[to];\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n","[\n  { \"question\": \"привет\", \"action\": \"greeting\" },\n  { \"question\": \"как тебя зовут\", \"action\": \"name\" },\n  { \"question\": \"погода\", \"action\": \"weather\" },\n  { \"question\": \"сколько время\", \"action\": \"time\" },\n  { \"question\": \"напомни\", \"action\": \"reminder\" },\n  { \"question\": \"новости\", \"action\": \"news\" },\n  { \"question\": \"расскажи анекдот\", \"action\": \"joke\" },\n  { \"question\": \"расскажи что-нибудь интересное\", \"action\": \"fact\" },\n  { \"question\": \"сколько стоит доллар\", \"action\": \"currency\" },\n  { \"question\": \"поставь таймер\", \"action\": \"timer\" },\n  { \"question\": \"включи свет\", \"action\": \"smart_home\" },\n  { \"question\": \"игра угадай число\", \"action\": \"game\" }\n]\n","const reminders = JSON.parse(localStorage.getItem('reminders')) || [];\n\nexport function addReminder(reminderText) {\n  const reminder = {\n    id: new Date().getTime(),\n    text: reminderText,\n    createdAt: new Date()\n  };\n  reminders.push(reminder);\n  localStorage.setItem('reminders', JSON.stringify(reminders));\n  return `Я напомню вам: ${reminderText}`;\n}\n\nexport function getReminders() {\n  return reminders;\n}\n","export function tellJoke() {\n  const jokes = [\n    \"Почему программисты любят зиму? Потому что это единственное время, когда они могут работать с `снежным коммитом`.\",\n    \"Что говорит программист перед тем, как сесть за руль? 'Сначала я напишу тест.'\",\n    \"Почему программисты не могут поиграть в шахматы? Потому что они не могут делать два хода подряд!\"\n  ];\n  return jokes[Math.floor(Math.random() * jokes.length)];\n}\n\nexport function tellFact() {\n  const facts = [\n    \"Человеческий мозг может хранить объем информации, равный 10 терабайтам.\",\n    \"Скорость звука в воде в пять раз больше, чем в воздухе.\",\n    \"Глобальное потепление ускоряет растекание нефти в воде, делает это более сложным для очистки.\"\n  ];\n  return facts[Math.floor(Math.random() * facts.length)];\n}\n","const smartDevices = {\n  light: false,\n  fan: false,\n  heating: false\n};\n\nexport function controlSmartHome(command) {\n  if (command.includes('включи свет')) {\n    smartDevices.light = true;\n    return 'Свет включен.';\n  } else if (command.includes('выключи свет')) {\n    smartDevices.light = false;\n    return 'Свет выключен.';\n  } else if (command.includes('включи вентилятор')) {\n    smartDevices.fan = true;\n    return 'Вентилятор включен.';\n  } else if (command.includes('выключи вентилятор')) {\n    smartDevices.fan = false;\n    return 'Вентилятор выключен.';\n  } else if (command.includes('включи отопление')) {\n    smartDevices.heating = true;\n    return 'Отопление включено.';\n  } else if (command.includes('выключи отопление')) {\n    smartDevices.heating = false;\n    return 'Отопление выключено.';\n  } else {\n    return 'Не могу распознать команду для умного дома.';\n  }\n}\n","import db from './db.json';\nimport { fetchWeather } from './weather.js';\nimport { fetchNews } from './news.js';\nimport { fetchCurrencyRate } from './currency.js';\nimport { addReminder } from './reminders.js';\nimport { tellJoke, tellFact } from './jokes.js';\nimport { controlSmartHome } from './smart-home.js';\n\nexport async function processInput(input) {\n  const match = db.find(entry => input.includes(entry.question));\n  if (!match) return 'Извините, я не знаю такой команды.';\n\n  switch (match.action) {\n    case 'greeting':\n      return 'Привет! Чем могу помочь?';\n    case 'name':\n      return 'Меня зовут Джарвис, ваш голосовой помощник.';\n    case 'weather':\n      return await fetchWeather('Москва'); // Используйте распознавание города\n    case 'time':\n      return `Сейчас ${new Date().toLocaleTimeString('ru-RU')}.`;\n    case 'reminder':\n      return addReminder(input);\n    case 'news':\n      return await fetchNews('новости');\n    case 'joke':\n      return tellJoke();\n    case 'fact':\n      return tellFact();\n    case 'currency':\n      return `Курс доллара: ${await fetchCurrencyRate('USD', 'RUB')} рублей.`;\n    case 'smart_home':\n      return controlSmartHome(input);\n    case 'timer':\n      return 'Таймер функция еще в разработке.';\n    case 'game':\n      return 'Игра \"Угадай число\" началась! Попробуйте угадать.';\n    default:\n      return 'Извините, я не понимаю эту команду.';\n  }\n}\n","export function speak(text) {\n  const utterance = new SpeechSynthesisUtterance(text);\n  utterance.lang = 'ru-RU';\n  speechSynthesis.speak(utterance);\n}\n","import { processInput } from './ai.js';\nimport { speak } from './utils.js';\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\nif (SpeechRecognition) {\n  const recognition = new SpeechRecognition();\n  recognition.lang = 'ru-RU';\n  recognition.interimResults = false;\n\n  const startBtn = document.getElementById('start-btn');\n  const stopBtn = document.getElementById('stop-btn');\n  const output = document.getElementById('output');\n\n  startBtn.addEventListener('click', () => {\n    recognition.start();\n    startBtn.classList.add('listening');\n    output.textContent = 'Слушаю вас...';\n  });\n\n  stopBtn.addEventListener('click', () => {\n    window.speechSynthesis.cancel();\n    speak('Озвучивание прервано.');\n  });\n\n  recognition.addEventListener('result', async (event) => {\n    const speech = event.results[0][0].transcript.toLowerCase();\n    output.textContent = `Вы сказали: \"${speech}\"`;\n    startBtn.classList.remove('listening');\n    const response = await processInput(speech);\n    speak(response);\n  });\n\n  recognition.addEventListener('end', () => {\n    startBtn.classList.remove('listening');\n  });\n} else {\n  alert('Ваш браузер не поддерживает Web Speech API.');\n}\n"],"names":["async","$7db59f3fe2689fbe$export$7a954b5c9a93cc61","city","url","response","fetch","ok","Error","data","json","name","weather","main","description","temp","error","console","$b6922d8a54e73e1b$export$cadad47cc1e7eb14","keyword","articles","$550935ae8fce6d90$export$46845f7b3313fd31","from","to","rates","$5b65ba17a18ccecb$exports","JSON","parse","$56e9a171eb494bd7$var$reminders","localStorage","getItem","$56e9a171eb494bd7$export$47c82bb71513a20e","reminderText","reminder","id","Date","getTime","text","createdAt","push","setItem","stringify","$83ffa48e89a9353f$export$e1c6459657ef0cee","jokes","Math","floor","random","length","$83ffa48e89a9353f$export$7e5dfea94f562825","facts","$d452245199bffefa$var$smartDevices","light","fan","heating","$08d5b876894b16c3$export$8900752527a65c70","input","match","$parcel$interopDefault","find","entry","includes","question","action","toLocaleTimeString","command","$6531107febf5e71a$export$e62e8864abfee904","utterance","SpeechSynthesisUtterance","lang","speechSynthesis","speak","$1f0dc3b9307be026$var$SpeechRecognition","window","SpeechRecognition","webkitSpeechRecognition","recognition","interimResults","startBtn","document","getElementById","stopBtn","output","addEventListener","start","classList","add","textContent","cancel","event","speech","results","transcript","toLowerCase","remove","alert"],"version":3,"file":"index.a98bf06a.js.map"}